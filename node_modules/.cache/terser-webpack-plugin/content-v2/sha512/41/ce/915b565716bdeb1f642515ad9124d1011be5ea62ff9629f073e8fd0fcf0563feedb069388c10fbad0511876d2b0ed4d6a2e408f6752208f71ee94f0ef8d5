{"code":"!function(n){var r={};function e(t){if(r[t])return r[t].exports;var a=r[t]={i:t,l:!1,exports:{}};return n[t].call(a.exports,a,a.exports,e),a.l=!0,a.exports}e.m=n,e.c=r,e.d=function(n,r,t){e.o(n,r)||Object.defineProperty(n,r,{enumerable:!0,get:t})},e.r=function(n){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})},e.t=function(n,r){if(1&r&&(n=e(n)),8&r)return n;if(4&r&&\"object\"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(e.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:n}),2&r&&\"string\"!=typeof n)for(var a in n)e.d(t,a,function(r){return n[r]}.bind(null,a));return t},e.n=function(n){var r=n&&n.__esModule?function(){return n.default}:function(){return n};return e.d(r,\"a\",r),r},e.o=function(n,r){return Object.prototype.hasOwnProperty.call(n,r)},e.p=\"\",e(e.s=\"./src/functionality.js\")}({\"./src/functionality.js\":\n/*!******************************!*\\\n  !*** ./src/functionality.js ***!\n  \\******************************/\n/*! no static exports found */function(module,exports){eval('// ==UserScript==\\r\\n    // @name         Format Trello\\r\\n    // @namespace    http://tampermonkey.net/\\r\\n    // @version      0.22\\r\\n    // @description\\r\\n    // @author       Dale de Silva www.ublik-om.net\\r\\n    // @match        https://trello.com/*\\r\\n    // @grant        none\\r\\n    // ==/UserScript==\\r\\n\\r\\n\\r\\n    // Notes about development\\r\\n    //////////////////////////\\r\\n    // This script uses jquery annotation but doesn\\'t \"require\" jquery as Trello already does.\\r\\n    //////////////////////////\\r\\n\\r\\n\\r\\n    /*\\r\\n    19/09/2019\\r\\n    - Adjustments to page change observer so that it fires immediately when started.\\r\\n    - Change to @match property to include all of Trello as clicking into a board doesn\\'t cause a recheck for scripts unless you manually refresh\\r\\n    */\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   var pageChangeTimeOutID;\\r\\n   var pageStartTimerID;\\r\\n   var $latestMutations = $(\"body\");\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   function loadIcons() {\\r\\n       \\'use strict\\';\\r\\n\\r\\n       let htmlStr = \\'<script src=\"https://kit.fontawesome.com/c0535646a5.js\" crossorigin=\"anonymous\"><\\/script>\\';\\r\\n       $(\"head\").append(htmlStr);\\r\\n\\r\\n   }\\r\\n\\r\\n\\r\\n\\r\\n   function injectCss() {\\r\\n       \\'use strict\\';\\r\\n\\r\\n       let customCss = \"\";\\r\\n\\r\\n       \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n       // add all the created css to the document\\r\\n       //$(\"head\").append(\"<style type=\\'text/css\\'>\" + customCss + \"</style>\");\\r\\n\\r\\n\\r\\n   }\\r\\n\\r\\n\\r\\n   var lastInterpreted = null;\\r\\n   function interpretLists() {\\r\\n       \\'use strict\\';\\r\\n\\r\\n       //console.log(\"Restyling lists\");\\r\\n\\r\\n       $latestMutations.find(\".list-header h2\").each( function() {\\r\\n\\r\\n           let $title = $(this);\\r\\n           let titleText = $title.text().toUpperCase();\\r\\n\\r\\n           if( titleText.indexOf(\"DONE\") >= 0 || titleText.indexOf(\"FINISHED\") >= 0 || titleText.indexOf(\"COMPLETE\") >= 0) {\\r\\n               $title.closest(\".js-list\").addClass(\"done\");\\r\\n\\r\\n           } else if( titleText.indexOf(\"GOAL\") >= 0 || titleText.indexOf(\"FUTURE\") >= 0 ) {\\r\\n               $title.closest(\".js-list\").addClass(\"future\");\\r\\n\\r\\n           } else if( titleText.indexOf(\"DITCH\") >= 0 || titleText.indexOf(\"ABANDON\") >= 0 ) {\\r\\n                $title.closest(\".js-list\").addClass(\"abandoned\");\\r\\n\\r\\n           } else if( titleText.indexOf(\"DUMP\") >= 0 ) {\\r\\n               $title.closest(\".js-list\").addClass(\"brain-dump\");\\r\\n\\r\\n           }\\r\\n\\r\\n\\r\\n       });\\r\\n\\r\\n\\r\\n\\r\\n   }\\r\\n\\r\\n\\r\\n\\r\\n   function createListButtons() {\\r\\n       \\'use strict\\';\\r\\n\\r\\n\\r\\n       let $listSettings = $latestMutations.find(\".pop-over-header\").first();\\r\\n       // Bail if the list settings popup isn\\'t present\\r\\n       if($listSettings.length == 0) {\\r\\n           //console.log(\"list settings popup not found.\");\\r\\n           return;\\r\\n       }\\r\\n       console.log(\"Adjusting list settings.\");\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n       let htmlStr = \"\";\\r\\n\\r\\n\\r\\n       htmlStr += \"<div class=\\'ft_list-btn-group\\'>\";\\r\\n\\r\\n       //htmlStr += \"\\t<a class=\\'list-immediate-btn\\' href=\\'#\\'><span class=\\'icon-sm board-header-btn-icon\\'><i class=\\'fas fa-cog\\'></i></span></a>\";\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n       // LABELS TOGGLE\\r\\n       // Use to...\\r\\n       // - Show according to list settings\\r\\n       // - Show labels normally (Trello default)\\r\\n       // - Show labels as coloured bar on side\\r\\n       // - Hide labels\\r\\n       htmlStr += \"<a href=\\'#\\' class=\\'ft_pop-over-header-btn left-most icon-sm\\'><i class=\\'fas fa-tag\\'></i></a>\";\\r\\n       // Global button...\\r\\n       // - Overides this\\r\\n\\r\\n       // User visibility always hidden unless global list size settings turned off\\r\\n       // TO DO: What is this talking about?\\r\\n\\r\\n       // DUE DATES TOGGLE\\r\\n       // Use to...\\r\\n       // - Show according to list settings\\r\\n       // - Show due dates normally (Trello default)\\r\\n       // - Show colour & icon only for due soon and overdue\\r\\n       // - Hide due dates\\r\\n       htmlStr += \"<a href=\\'#\\' class=\\'ft_pop-over-header-btn icon-sm\\'><i class=\\'fas fa-clock\\'></i></a>\";\\r\\n       // Global button...\\r\\n       // - Overides this\\r\\n\\r\\n       // DETAILS TOGGLE\\r\\n       // Use to...\\r\\n       // - Show according to list settings\\r\\n       // - Show any badges other than due dates and users, and checklists normally (Trello default)\\r\\n       // - Hide any badges other than due dates and users, and display checklists as progress bars\\r\\n       // - Hide any badges and checklists other than due dates and users\\r\\n       htmlStr += \"<a href=\\'#\\' class=\\'ft_pop-over-header-btn icon-sm\\'><i class=\\'fas fa-comment-alt\\'></i></a>\";\\r\\n       // Global button...\\r\\n       // - Overides this only if list is not set to shrink ????\\r\\n\\r\\n       // IMAGES TOGGLE\\r\\n       // Use to..\\r\\n       // - Show inline image previews (Trello default)\\r\\n       // - Reduce images previews to a small horizontal bar\\r\\n       // - Hide image previews\\r\\n       htmlStr += \"<a href=\\'#\\' class=\\'ft_pop-over-header-btn icon-sm\\'><i class=\\'fas fa-image\\'></i></a>\";\\r\\n       // Global button...\\r\\n       // - Overides this only if list is not set to shrink ????\\r\\n\\r\\n       // LIST APPEARANCE TOGGLE\\r\\n       // Use to...\\r\\n       // - Show lists normally (Trello default)\\r\\n       // - Shrink list\\r\\n       // - Shrink list and darken\\r\\n       // - Shrink list and fade\\r\\n//        htmlStr += \"<a href=\\'#\\' class=\\'ft_pop-over-header-btn icon-sm\\'><i class=\\'fab fa-trello\\'></i></a>\";\\r\\n       htmlStr += \"<a href=\\'#\\' class=\\'ft_pop-over-header-btn icon-sm\\'><i class=\\'fas fa-poll fa-rotate-180\\'></i></a>\";\\r\\n       // Global button...\\r\\n       // - Overides all these\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n       // LIST SETTINGS BUTTON\\r\\n       // Use to...\\r\\n       // - Change name of list it is looking for - toggle between \"match\" and \"contains\" (be warey of if the change it to a word that\\'s not in any list the settings will be lost - perhaps it saves elsewhere (too?)?)\\r\\n       // - Copy text based settings string?\\r\\n       // - Paste text based settings string?\\r\\n       htmlStr += \"<a href=\\'#\\' class=\\'ft_pop-over-header-btn icon-sm\\'><i class=\\'fas fa-cog\\'></i></a>\";\\r\\n\\r\\n       // LIST VISIBILITY BUTTON\\r\\n       // Use to...\\r\\n       // - Hide/Unhide list\\r\\n       htmlStr += \"<a href=\\'#\\' class=\\'ft_pop-over-header-btn icon-sm\\'><i class=\\'fas fa-eye\\'></i></a>\";  // eye-slash\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n       htmlStr += \"</div>\"; //ft_list-btn-group\\r\\n\\r\\n       // apply as button set that appears to right of 3 dots in list when clicked\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n       //let $listExtrasMenus = $(\".list-header-extras-menu\"); // .board-header-btns\\r\\n       //$listExtrasMenus.prepend(htmlStr);\\r\\n\\r\\n\\r\\n       // remove text from list settings header\\r\\n       $listSettings.find(\".pop-over-header-title\").html(\".\"); // TO DO: This is visible, need to put in a blank so the header line stays visible without adding anything new.\\r\\n       $listSettings.prepend(htmlStr);\\r\\n\\r\\n\\r\\n   }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   function createHeaderButtons() {\\r\\n       \\'use strict\\';\\r\\n       console.log(\\'attempting to create header buttons\\');\\r\\n       \\r\\n       \\r\\n       \\r\\n       let $rightHeader = $latestMutations.find(\".mod-right\").first();\\r\\n       // Bail if the right header isn\\'t present in anything that\\'s modified\\r\\n       if($rightHeader.length == 0) {\\r\\n           console.log(\"right header not found.\");\\r\\n           return;\\r\\n       }\\r\\n\\r\\n       \\r\\n       \\r\\n       let htmlStr = \"\";\\r\\n\\r\\n\\r\\n       htmlStr += \"\\t<a class=\\'board-header-btn board-header-btn-without-icon\\' href=\\'#\\'><span class=\\'board-header-btn-text\\'>Re-Format</span></a>\";\\r\\n       htmlStr += \"\\t<a class=\\'board-header-btn\\' href=\\'#\\'><span class=\\'icon-sm board-header-btn-icon\\'><i class=\\'fas fa-save\\'></i></span></a>\"; // check-circle\\r\\n       htmlStr += \"\\t<a class=\\'board-header-btn\\' href=\\'#\\'><span class=\\'icon-sm board-header-btn-icon\\'><i class=\\'fas fa-plus-square\\'></i></span></a>\";\\r\\n       htmlStr += \"\\t<a class=\\'board-header-btn\\' href=\\'#\\'><span class=\\'icon-sm board-header-btn-icon\\'><i class=\\'fas fa-backspace\\'></i></span></a>\";\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n       // find the standard Trell board header and the div that holds all buttons that float to the right\\r\\n       // put in the new button\\r\\n       //let $rightSideHeader = $(\".mod-right\"); // .board-header-btns\\r\\n       $rightHeader.prepend(htmlStr);\\r\\n\\r\\n       console.log($rightHeader);\\r\\n       console.log(\\'header buttons created\\');\\r\\n   }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   function startPageChangeObserver() {\\r\\n\\r\\n       var pageChangeObserver = new MutationObserver(function(mutations) {\\r\\n            \\r\\n           // erase previous mutation list and create empty jquery object\\r\\n           $latestMutations = $();\\r\\n           \\r\\n           for (const mutation of mutations) {\\r\\n\\r\\n               if( mutation.addedNodes !== null ) { // If there are new nodes added\\r\\n                   $latestMutations = $latestMutations.add( mutation.addedNodes );\\r\\n               }\\r\\n               \\r\\n           }\\r\\n           \\r\\n           immediatePageAdjustments();\\r\\n\\r\\n           window.clearTimeout(pageChangeTimeOutID);\\r\\n           pageChangeTimeOutID = window.setTimeout(delayedPageChangeAdjustments, 1000);\\r\\n           \\r\\n\\r\\n       });\\r\\n\\r\\n       pageChangeObserver.observe(document.documentElement, {\\r\\n           childList: true,\\r\\n           subtree: true,\\r\\n       });\\r\\n\\r\\n   }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   // Actions that need to be run on page initialisation\\r\\n   function immediatePageInitialisation() {\\r\\n       console.log(\"Immediate page Initialisation\");\\r\\n\\r\\n       // only on initial page load (which can be the Trello home page and not again)\\r\\n       loadIcons();\\r\\n       injectCss();\\r\\n       startPageChangeObserver();\\r\\n\\r\\n       // and everything else that needs to run on any page update\\r\\n       immediatePageAdjustments();\\r\\n\\r\\n   }\\r\\n\\r\\n\\r\\n   // Actions that need to be run on page initialisation\\r\\n   function delayedPageInitialisation() {\\r\\n       console.log(\"Delayed page Initialisation\");\\r\\n\\r\\n       // only on initial page load (which can be the Trello home page and not again)\\r\\n       \\r\\n       \\r\\n       // and everything else that needs to run on any page update\\r\\n       delayedPageChangeAdjustments();\\r\\n\\r\\n   }\\r\\n\\r\\n\\r\\n\\r\\n   // On any page update, do anything that needs to happen immediately (no visual discrepancy)\\r\\n   function immediatePageAdjustments() {\\r\\n       interpretLists();\\r\\n       createListButtons();\\r\\n       createHeaderButtons();\\r\\n   }\\r\\n\\r\\n   // On any page update, do anything that can happen a split second later\\r\\n   function delayedPageChangeAdjustments() {\\r\\n       \\r\\n   }\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   // TODO: create button to allow you to change titles that are searched for, colours, maybe add more titles to search for?\\r\\n   // fade checkbox (or value);\\r\\n   // colour overide\\r\\n\\r\\n\\r\\n   // TODO: actions should be rerun based on mutation observer (or drop listener)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n   // on page load\\r\\n   $(function() {\\r\\n\\r\\n       immediatePageInitialisation();\\r\\n       pageStartTimerID = window.setTimeout(delayedPageInitialisation, 3000);\\r\\n   });\\r\\n\\n\\n//# sourceURL=webpack:///./src/functionality.js?')}});","extractedComments":[]}